# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: openjdk:7-jdk-alpine
      environment:
        JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/javacoursesdb
        JDBC_DATABASE_USERNAME: root
        JDBC_DATABASE_PASSWORD: root

    - image: circleci/postgres:9.6.5-alpine-ram
      environment:
        POSTGRES_DB: javacoursesdb



    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/java-courses-api

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: mvn dependency:go-offline

    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}

    # run tests!
    - run: mvn test

  deploy:
    docker:
    - image: circleci/buildpack-deps:trusty
    steps:
    - checkout
    - run:
        name: Deploy app on heroku
        command: |
          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
    - build
    - hold:
        type: approval
        requires:
        - build
    - deploy:
        requires:
        - hold




